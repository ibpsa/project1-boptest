name: CI

on:
  pull_request:
    branches:
      -  'boptest-service'
  push:
    branches:
      -  'boptest-service'
    tags:
      - '*-service'  # boptest-service releases are appended with -service


jobs:

  simulation-tests:
    name: Build containers and run boptest simulation tests
    runs-on: ubuntu-latest
    timeout-minutes: 240
    env:
      COMPOSE_PROJECT_NAME: boptest_service
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Build and run stack
        run: |
          docker-compose -f docker-compose.yml up --build -d

      - name: dump docker logs
        uses: jwalton/gh-docker-logs@v1

      - name: Upload test cases to minio
        run: |
          docker-compose run --no-deps provision python3 -m boptest_submit ./testcases/${TESTCASE}
          curl http://localhost/testcases

      - name: Wait for web server
        uses: nev7n/wait_for_response@v1
        with:
          url: "http://localhost/testcases"
          responseCode: 200
          timeout: 120000
          interval: 500

      - name: Run test cases 
        run: |
          python --version
          pip install requests matplotlib numpy pandas
          PYTHONPATH=$GITHUB_WORKSPACE
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
          # Storing PYTHONPATH above doesn't work for python so setting it below at run 
          PYTHONPATH=$GITHUB_WORKSPACE python examples/python/testcase1.py 

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Publish docker images
        if: |
          github.ref == 'refs/heads/boptest-service' ||
          contains(github.ref, 'refs/tags') 
        shell: bash
        run: ./.github/workflows/publish_to_docker.sh
