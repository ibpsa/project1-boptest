removePlots();
// --------------- Linearization and save matrices into ssm.mat --------------------------------
// Remove CPU to avoid additional output
OutputCPUtime:=false;
linearModelName = "ZoneWithInputsLinearise";
// linearise model and save results in 're'
re=Modelica_LinearSystems2.ModelAnalysis.Linearize("IDEAS.LIDEAS.Examples." + linearModelName);
// extract state space matrices from 're' and save them to a mat file in the current working directory
save_path = Modelica.Utilities.Files.loadResource("modelica://IDEAS/Resources/LIDEAS/");
writeMatrix(fileName= save_path + "ssm_" + linearModelName + ".mat",matrixName="A",matrix=re.A);
writeMatrix(fileName= save_path + "ssm_" +linearModelName + ".mat",matrixName="B",matrix=re.B, append=true);
writeMatrix(fileName= save_path + "ssm_" +linearModelName + ".mat",matrixName="C",matrix=re.C, append=true);
writeMatrix(fileName= save_path + "ssm_" +linearModelName + ".mat",matrixName="D",matrix=re.D, append=true);
// save the variable names of the inputs, outputs and states in the current working directory
Modelica.Utilities.Files.remove(save_path + "uNames_" + linearModelName + ".txt");
for i in 1:size(re.uNames,1) loop Modelica.Utilities.Streams.print(re.uNames[i], save_path + "uNames_" + linearModelName + ".txt"); end for;
Modelica.Utilities.Files.remove(save_path + "yNames_" + linearModelName + ".txt");
for i in 1:size(re.yNames,1) loop Modelica.Utilities.Streams.print(re.yNames[i], save_path + "yNames_" + linearModelName + ".txt"); end for;
Modelica.Utilities.Files.remove(save_path + "xNames_" + linearModelName + ".txt");
for i in 1:size(re.xNames,1) loop Modelica.Utilities.Streams.print(re.xNames[i], save_path + "xNames_" + linearModelName + ".txt"); end for;
// Re-add CPU
OutputCPUtime:=true;
// --------------- Simulate and plot model --------------------------------
simulateModel("IDEAS.LIDEAS.Validation.ZoneWithInputsValidationLinear", startTime=0, method="dassl", tolerance=1e-6, stopTime=100000, resultFile="ZoneWithInputsValidationLinear");
createPlot(id=1, position={0, 0, 1283, 740}, y={"TZon_ssm[1].y", "TZon[1].y"}, range={0.0, 100000.0, 19.5, 22.0}, grid=true, colors={{28,108,200}, {238,46,47}});
createPlot(id=1, position={0, 0, 1283, 244}, y={"TZon_ssm[2].y", "TZon[2].y"}, range={0.0, 100000.0, 15.0, 40.0}, grid=true, subPlot=2, colors={{28,108,200}, {238,46,47}});
createPlot(id=1, position={0, 0, 1283, 243}, y={"err[1].y", "err[2].y"}, range={0.0, 100000.0, -0.0002, 4.9999999999999996E-005}, grid=true, subPlot=3, colors={{28,108,200}, {238,46,47}});

